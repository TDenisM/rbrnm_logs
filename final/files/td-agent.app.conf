<system>
  log_level trace
  workers 3
</system>

<worker 0>
<source>
  @type tail
  path /var/log/*.log,/var/log/syslog
#  pos_file /var/log/td-agent/system.pos
  tag system.*
  refresh_interval 5s
  read_from_head true
  <parse>
    @type syslog
    keep_time_key true
    time_key time
#    estimate_current_event false
  </parse>
  @label @INPUT
</source>
</worker>

<worker 1>
<source>
  @type tail
  path /var/log/nginx/*.log
#  pos_file /var/log/td-agent/nginx.pos
  tag nginx.*
  refresh_interval 5s
  read_from_head true
  <parse>
    @type nginx
    keep_time_key true
    time_key time
#    estimate_current_event false
  </parse>
  @label @INPUT
</source>
</worker>

<worker 2>
<source>
    @type tail
    path /var/lib/docker/containers/*/*-json.log
#    pos_file /var/log/td-agent/docker.pos
    read_from_head true
    tag docker.*
    <parse>
      @type json
      time_key time
      time_type string
      time_format %Y-%m-%dT%H:%M:%S.%NZ
    </parse>
#    <filter docker.**>
#      @type record_transformer
#      <record>
#        container_id ${tag_parts[5]}
#      </record>
#    </filter>
    @label @INPUT
</source>
</worker>

<label @INPUT>
  <filter {system,nginx,docker}.**>
    @type record_transformer
    <record>
      hostname ${hostname}
    </record>
    <record>
      service ${tag_parts[0]}
    </record>
    enable_ruby
    <record>
      @timestamp ${time.strftime('%Y-%m-%dT%H:%M:%S%z')}
    </record>
  </filter>
  <filter docker.**>
    @type record_transformer
    <record>
      container_id ${tag_parts[5]}
    </record>
  </filter>

  <match {system,nginx,docker}.**>
    @type kafka_buffered
    brokers logs.internal:9092
    topic_key logs
    default_topic logs    
    buffer_type file
    buffer_path /var/log/td-agent/buffer/td
    output_data_type json
    compression_codec gzip
    flush_interval 3s
#    <inject>
#      tag_key tag
#      time_key time
#  </inject>
  </match>
</label>
